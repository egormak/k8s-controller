---
apiVersion: v1
kind: Namespace
metadata:
  name: k8s-controller-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-controller
  namespace: k8s-controller-system
  labels:
    app: k8s-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-controller
  template:
    metadata:
      labels:
        app: k8s-controller
    spec:
      serviceAccountName: k8s-controller
      containers:
      - name: controller
        image: ghcr.io/REPOSITORY_PLACEHOLDER:latest  # Will be replaced during release
        imagePullPolicy: Always
        command:
        - ./controller
        - serve
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: LOG_LEVEL
          value: "INFO"
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-controller
  namespace: k8s-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-controller
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-controller
subjects:
- kind: ServiceAccount
  name: k8s-controller
  namespace: k8s-controller-system
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-controller
  namespace: k8s-controller-system
  labels:
    app: k8s-controller
spec:
  selector:
    app: k8s-controller
  ports:
  - name: http
    port: 80
    targetPort: 8080
  type: ClusterIP
