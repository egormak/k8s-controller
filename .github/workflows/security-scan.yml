name: Security Scan

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * 0'  # Run every Sunday at midnight

jobs:
  scan:
    name: Security Scan with Trivy
    runs-on: ubuntu-latest
    timeout-minutes: 20  # Add timeout to prevent long-running scans
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: k8s-controller:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.17.0  # Pin to a specific version
        with:
          image-ref: k8s-controller:test
          format: 'table'
          output: 'trivy-image-results.txt'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          timeout: '10m'

      - name: Run Trivy vulnerability scanner (SARIF)
        uses: aquasecurity/trivy-action@0.17.0
        with:
          image-ref: k8s-controller:test
          format: 'sarif'
          output: 'trivy-image-results.sarif'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'  # Don't fail here since we'll fail in the table format step
          
      - name: Scan repository for vulnerabilities
        uses: aquasecurity/trivy-action@0.17.0
        with:
          scan-type: 'fs'
          format: 'table'
          output: 'trivy-repo-results.txt'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          timeout: '10m'

      - name: Scan repository for vulnerabilities (SARIF)
        uses: aquasecurity/trivy-action@0.17.0
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-repo-results.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          exit-code: '0'  # Don't fail here since we'll fail in the table format step

      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v4
        if: always()  # Run even if previous steps failed
        with:
          name: trivy-scan-results
          path: |
            trivy-image-results.txt
            trivy-repo-results.txt
          retention-days: 7
          
      - name: Upload Trivy SARIF results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        if: always()  # Run even if previous steps failed
        with:
          sarif_file: trivy-repo-results.sarif
          category: trivy-repo
          
      - name: Upload Trivy SARIF Image results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        if: always()  # Run even if previous steps failed
        with:
          sarif_file: trivy-image-results.sarif
          category: trivy-image